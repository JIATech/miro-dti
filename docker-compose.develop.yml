version: '3.8'

networks:
  intercom-network:
    driver: bridge

services:
  pwa:
    build: 
      context: ./pwa
      dockerfile: Dockerfile
    container_name: intercom-pwa
    restart: unless-stopped
    ports:
      - "${PWA_PORT}:80"
    networks:
      - intercom-network
    depends_on:
      - signaling
      - mirotalksfu
    environment:
      - LOCAL_IP=${LOCAL_IP}
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  signaling:
    build: 
      context: ./signaling
      dockerfile: Dockerfile
    container_name: intercom-signaling
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - SIGNALING_PORT=${SIGNALING_PORT}
      - CORS_ORIGIN=*
      - LOCAL_IP=${LOCAL_IP}
    ports:
      - "${SIGNALING_PORT}:3000"
    networks:
      - intercom-network
    volumes:
      - ./signaling/logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  mirotalksfu:
    build: 
      context: ./mirotalksfu
      dockerfile: Dockerfile
    container_name: intercom-mirotalksfu
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - SFU_PORT=${SFU_PORT}
      - SFU_MIN_PORT=${SFU_MIN_PORT}
      - SFU_MAX_PORT=${SFU_MAX_PORT}
      - SFU_LISTEN_IP=0.0.0.0
      - SFU_PUBLIC_IP=${LOCAL_IP}
      - API_KEY_SECRET=intercom_dev_api_secret
      - JWT_KEY=intercom_dev_jwt_secret
    ports:
      - "${SFU_PORT}:8080/tcp"
      - "${SFU_MIN_PORT}-${SFU_MAX_PORT}:${SFU_MIN_PORT}-${SFU_MAX_PORT}/udp"
    networks:
      - intercom-network
    volumes:
      - ./mirotalksfu/app/rec:/app/app/rec
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  admin:
    build: 
      context: ./admin
      dockerfile: Dockerfile
    container_name: intercom-admin
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - ADMIN_PORT=${ADMIN_PORT}
      - ADMIN_USER=${ADMIN_USER}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - LOCAL_IP=${LOCAL_IP}
    ports:
      - "${ADMIN_PORT}:8090"
    networks:
      - intercom-network
    volumes:
      - ./admin/logs:/app/logs
    depends_on:
      - pwa
      - signaling
      - mirotalksfu
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8090"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
